
R version 2.4.0 Patched (2006-10-03 r39576)
Copyright (C) 2006 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(robustbase)
> 
> ## minimal testing only
> data(ruspini, package = "cluster")
> 
> rub1 <- covOGK(ruspini, 1, scaleTau2, covGK, hard.rejection, consistency=FALSE)
> rub2 <- covOGK(ruspini, 2, scaleTau2, covGK, hard.rejection, consistency=FALSE)
> 
> AE <- function(x,y) all.equal(x,y, tolerance = 2e-15)
> ## The following test is already fulfilled by Kjell Konis'  original code:
> stopifnot(AE(c(rub1$wcov)[c(1,3:4)],
+              c(917.99893333333, 94.9232, 2340.319288888888)),
+           all.equal(rub1$wcov, rub2$wcov, tolerance=0)
+           ,
+           AE(c(rub1$cov)[c(1,3:4)],
+              c(923.5774514441657, 91.5385216376565, 2342.4556232436971))
+           ,
+           AE(c(rub2$cov)[c(1,3:4)],
+              c(927.2465953711782, 91.8009184487779, 2346.5790105548940))
+           )
> 
> data(milk)
> cM1 <- covOGK(milk, 1, sigmamu = scaleTau2, weight.fn = hard.rejection)
> cM2 <- covOGK(milk, 2, sigmamu = scaleTau2, weight.fn = hard.rejection)
> 
> symnum(cov2cor(cM1 $cov))
                    
[1,] 1              
[2,]   1            
[3,] . . 1          
[4,] .   * 1        
[5,] . . * * 1      
[6,] . . * * * 1    
[7,] . . . . . . 1  
[8,]   . , . . . . 1
attr(,"legend")
[1] 0 ‘ ’ 0.3 ‘.’ 0.6 ‘,’ 0.8 ‘+’ 0.9 ‘*’ 0.95 ‘B’ 1
> symnum(cov2cor(cM2 $cov))
                    
[1,] 1              
[2,]   1            
[3,] . . 1          
[4,] . . B 1        
[5,] . . * * 1      
[6,] . . B * * 1    
[7,] . , . . . . 1  
[8,]   . . . . . . 1
attr(,"legend")
[1] 0 ‘ ’ 0.3 ‘.’ 0.6 ‘,’ 0.8 ‘+’ 0.9 ‘*’ 0.95 ‘B’ 1
> symnum(cov2cor(cM1 $wcov))
   X1 X2 X3 X4 X5 X6 X7 X8
X1 1                      
X2    1                   
X3       1                
X4       B  1             
X5       *  *  1          
X6       *  *  *  1       
X7 .  .              1    
X8    .  .  .  .  .  .  1 
attr(,"legend")
[1] 0 ‘ ’ 0.3 ‘.’ 0.6 ‘,’ 0.8 ‘+’ 0.9 ‘*’ 0.95 ‘B’ 1
> symnum(cov2cor(cM2 $wcov))
   X1 X2 X3 X4 X5 X6 X7 X8
X1 1                      
X2    1                   
X3       1                
X4 .     B  1             
X5       *  B  1          
X6       B  B  B  1       
X7 .  ,  .  .  .  .  1    
X8    .  .  .  .  .  .  1 
attr(,"legend")
[1] 0 ‘ ’ 0.3 ‘.’ 0.6 ‘,’ 0.8 ‘+’ 0.9 ‘*’ 0.95 ‘B’ 1
> 
> cMQn  <- covOGK(milk, sigmamu = s_Qn, weight.fn = hard.rejection)
> cMSn  <- covOGK(milk, sigmamu = s_Sn, weight.fn = hard.rejection)
> cMiqr <- covOGK(milk, sigmamu = s_IQR, weight.fn = hard.rejection)
> cMmad <- covOGK(milk, sigmamu = s_mad, weight.fn = hard.rejection)
> 
> as.dist(round(cov2cor(cMQn$wcov), 3))
      X1    X2    X3    X4    X5    X6    X7
X2 0.091                                    
X3 0.227 0.187                              
X4 0.288 0.176 0.964                        
X5 0.256 0.132 0.943 0.952                  
X6 0.241 0.196 0.954 0.956 0.957            
X7 0.445 0.634 0.360 0.372 0.377 0.370      
X8 0.014 0.452 0.440 0.380 0.340 0.350 0.479
> as.dist(round(cov2cor(cMSn$wcov), 3))
      X1    X2    X3    X4    X5    X6    X7
X2 0.096                                    
X3 0.242 0.219                              
X4 0.305 0.200 0.960                        
X5 0.269 0.142 0.945 0.952                  
X6 0.260 0.233 0.948 0.953 0.964            
X7 0.445 0.636 0.391 0.399 0.395 0.408      
X8 0.020 0.448 0.453 0.384 0.331 0.360 0.484
> as.dist(round(cov2cor(cMiqr$wcov), 3))
      X1    X2    X3    X4    X5    X6    X7
X2 0.162                                    
X3 0.181 0.215                              
X4 0.225 0.199 0.964                        
X5 0.210 0.140 0.945 0.954                  
X6 0.187 0.239 0.950 0.951 0.954            
X7 0.453 0.660 0.350 0.354 0.355 0.367      
X8 0.111 0.454 0.470 0.407 0.345 0.404 0.516
> as.dist(round(cov2cor(cMmad$wcov), 3))
       X1     X2     X3     X4     X5     X6     X7
X2  0.077                                          
X3  0.228  0.175                                   
X4  0.289  0.159  0.962                            
X5  0.257  0.092  0.945  0.952                     
X6  0.238  0.189  0.954  0.956  0.962              
X7  0.451  0.588  0.345  0.358  0.353  0.358       
X8 -0.003  0.392  0.488  0.412  0.353  0.380  0.439
> 
> 
> cat('Time elapsed: ', proc.time(),'\n') # for ``statistical reasons''
Time elapsed:  1.925 0.07 2.512 0 0 
> 
