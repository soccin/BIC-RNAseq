
R : Copyright 2006, The R Foundation for Statistical Computing
Version 2.2.1 Patched (2006-02-18 r37407)
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(robustbase)
Loading required package: MASS
> 
> ### Test sets (all kinds odd/even, constant/regular/outlier)
> 
> ## n = 0,1,2,3 :
> x0 <- numeric(0)
> x1 <- 3
> x2 <- 1:2
> x3 <- c(1:2,10)
> ## constant (0 mad) + 0--2 outliers
> xC <-  rep(1, 12)
> xC. <- rep(1, 11)
> xC1  <- c(xC,  10)
> xC1. <- c(xC., 10)
> xC2  <- c(xC1,  100)
> xC2. <- c(xC1., 100)
> ## "uniform"  + 0--2 outliers
> y  <- 1:10
> y. <- 1:11
> y1  <- c(y,  100)
> y1. <- c(y., 100)
> y2  <- c(y1,  1000)
> y2. <- c(y1., 1000)
> 
> nms <- ls(pat="^[xy]"); nms; names(nms) <- nms
 [1] "x0"   "x1"   "x2"   "x3"   "xC"   "xC."  "xC1"  "xC1." "xC2"  "xC2."
[11] "y"    "y."   "y1"   "y1."  "y2"   "y2." 
> lx <- lapply(nms,
+              function(n) {
+                  x <- get(n)
+                  m <- mad(x)
+                  hx <-
+                      if(!is.na(m) && m > 0) MASS::huber(x)
+                      else list(m=NA, s=NA)
+                  hMx <- huberM(x)
+                  list(loc =
+                       c(median = median(x),
+                         huber  =  hx$m,
+                         huberM = hMx$m),
+                       scale=
+                       c(mad    = m,
+                         huber  =  hx$s,
+                         huberM = hMx$s))
+              })
> r <- list(mu = sapply(lx, function(x) x$loc),
+           s  = sapply(lx, function(x) x$scale))
> r
$mu
       x0 x1  x2       x3 xC xC. xC1 xC1. xC2 xC2.   y y.       y1      y1.
median NA  3 1.5 2.000000  1   1   1    1   1    1 5.5  6 6.000000 6.500000
huber  NA NA 1.5 2.611949 NA  NA  NA   NA  NA   NA 5.5  6 6.167169 6.606518
huberM NA  3 1.5 2.611949  1   1   1    1   1    1 5.5  6 6.167169 6.606518
             y2      y2.
median 6.500000 7.000000
huber  6.834339 7.213034
huberM 6.834339 7.213034

$s
       x0 x1     x2     x3 xC xC. xC1 xC1. xC2 xC2.      y     y.     y1    y1.
mad    NA  0 0.7413 1.4826  0   0   0    0   0    0 3.7065 4.4478 4.4478 4.4478
huber  NA NA 0.7413 1.4826 NA  NA  NA   NA  NA   NA 3.7065 4.4478 4.4478 4.4478
huberM NA  0 0.7413 1.4826  0   0   0    0   0    0 3.7065 4.4478 4.4478 4.4478
           y2    y2.
mad    4.4478 4.4478
huber  4.4478 4.4478
huberM 4.4478 4.4478

> 
> cat('Time elapsed: ', proc.time(),'\n') # for ``statistical reasons''
Time elapsed:  1.09 0.1 1.68 0 0 
> 
